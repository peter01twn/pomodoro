{"version":3,"sources":["App.js","components/SideBar.jsx","features/todos/FilterTodoList.jsx","components/CollapseNav.jsx","features/todos/TodoFilterNav.jsx","features/record/TimeBarChart.jsx","features/record/RecordReport.jsx","components/DatePicker.jsx","features/record/ChartController.jsx","pages/Report.jsx","features/todos/UndoneTodoList.jsx","features/clock/Clock.jsx","utils/timeTransform.js","features/clock/ClockControl.jsx","features/record/Times.jsx","pages/Index.jsx","features/ring/RingItem.jsx","features/ring/RingList.jsx","pages/Ring.jsx","utils/audioPlayer.js","features/ring/ringSlice.js","reducers/index.js","serviceWorker.js","utils/saveDataFromStore.js","index.js","configureStore.js","features/todos/todoSlice.js","utils/getFromLocalStorage.js","features/clock/clockSlice.js","features/record/recordSlice.js","utils/getDateString.js","features/todos/withFilterTodos.jsx","features/todos/TodoInput.jsx","features/todos/Todo.jsx","features/todos/TodoList.jsx"],"names":["hot","module","basename","className","path","SideBar","bg","variant","Link","as","NavLink","exact","to","withFilterTodos","TodoList","ctx","React","createContext","Provider","CollapseItem","Consumer","children","active","onClick","attrs","handleClick","useContext","CollapseNav","id","useState","open","setOpen","collapsing","setCollapsing","collapseNav","setCollapseNav","useEffect","collapseEl","document","querySelector","addEventListener","style","width","scrollWidth","activeItem","value","TodoFilterNav","useSelector","todo","filter","filterTypes","dispatch","useDispatch","map","el","i","key","Button","type","setFilter","barChart","TimeBarChart","data","propData","centerTime","canvas","useRef","options","aspectRatio","legend","display","scales","xAxes","time","minUnit","displayFormats","day","month","ticks","min","moment","clone","subtract","valueOf","max","add","maxRotation","yAxes","scaleLabel","beginAtZero","stepSize","maxTicksLimit","tooltips","callbacks","title","beforeLabel","arg","xLabel","label","plugins","zoom","pan","enabled","mode","rangeMin","x","y","speed","threshold","onPan","chart","onPanComplete","sensitivity","onZoom","console","log","onZoomComplete","datasets","yAxisID","xAxisID","backgroundColor","range","momentData","destroy","Chart","current","ref","workTimesSelector","createSelector","record","workTimes","date","push","RecordReport","chartCenter","DatePicker","Date","startDate","setStartDate","selected","onChange","ChartController","e","setChartCenter","Report","TodoInput","FilterTodoList","todos","undoneTodos","completed","maxHeight","Clock","clock","modeTime","secondTimd","secondsTime","minutes","Math","floor","seconds","transSecondToMinute","leftSlice","rightSlice","totalTime","rate","rotateAngle","opacity","transform","ClockControl","status","toggleMode","fontSize","stop","start","reset","Times","total","getTodayString","Index","outline","RingItem","rId","text","textNode","Dropdown","ButtonGroup","block","play","whiteSpace","Toggle","split","flip","Menu","alignRight","Item","setWorkRing","Divider","setRestRing","RingList","rings","ring","rNames","Object","keys","rName","Ring","workRing","restRing","AudioPlayer","src","this","_src","_loadPromise","_timeOut","_status","_audio","Audio","loop","pause","Promise","resolve","reject","setTimeout","audioPlayer","createAsyncThunk","thunkAPI","a","getState","ringFile","process","pauseAfterTimes","ringSlice","createSlice","name","initialState","Bugle_Tune","getFromLocalStorage","isPlaying","playingRing","reducers","state","action","payload","extraReducers","builder","addCase","pending","meta","fulfilled","actions","combineReducers","Boolean","window","location","hostname","match","saveDataFromStore","store","seletorObj","forEach","seletor","jsonData","JSON","stringify","localStorage","setItem","configureStore","reducer","rootReducer","subscribe","work_times","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","todoSlice","getFromLocalstorage","addTodo","unshift","prepare","random","toggleCompleted","targetTodo","find","updateTodo","deleteTodo","newTodos","parse","getItem","countInterval","WORK_TIMESUP","workTimesUp","createAction","restTimesUp","Error","setInterval","work","rest","clockSlice","clearInterval","nextMode","countDown","rejected","today","getDateString","now","dateIns","getDate","getMonth","fullYear","getFullYear","selectTodos","Component","input","setInput","target","height","Todo"],"mappings":"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","file":"static/js/main.a9ab4484.chunk.js","sourcesContent":["import React from 'react'\r\nimport { hot } from 'react-hot-loader'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport SideBar from 'components/SideBar'\r\nimport Index from 'pages/Index'\r\nimport Report from 'pages/Report'\r\nimport Ring from 'pages/Ring'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"pomodoro\">\r\n      <div className=\"side-container vh-100\">\r\n        <SideBar />\r\n        <div className=\"scrollbar h-100\">\r\n          <div className=\"container h-100\">\r\n            <Switch>\r\n              <Route path=\"/report\">\r\n                <Report />\r\n              </Route>\r\n              <Route path=\"/ring\">\r\n                <Ring />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Index />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default hot(module)(App)\r\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <Navbar\r\n      bg=\"pink\"\r\n      variant=\"dark\"\r\n      className=\"sidebar px-0 justify-content-center\"\r\n    >\r\n      <Nav className=\"flex-md-column align-items-center\">\r\n        <Nav.Link as={NavLink} exact to=\"/\" className=\"h4 mb-0\">\r\n          <i className=\"far fa-clock\"></i>\r\n        </Nav.Link>\r\n        <Nav.Link as={NavLink} to=\"/report\" className=\"h4 mb-0 ml-4 ml-md-0 mt-md-4\">\r\n          <i className=\"fas fa-stream\"></i>\r\n        </Nav.Link>\r\n        <Nav.Link as={NavLink} to=\"/ring\" className=\"h4 mb-0 ml-4 ml-md-0 mt-md-4\">\r\n          <i className=\"far fa-bell\"></i>\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React from 'react';\r\nimport withFilterTodos from \"./withFilterTodos\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nexport default withFilterTodos(TodoList);\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nconst ctx = React.createContext()\r\n\r\nexport const { Provider, Consumer } = ctx\r\n\r\nconst CollapseNav = ({ id, children, className, ...attrs }) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [collapsing, setCollapsing] = useState(false)\r\n  const [collapseNav, setCollapseNav] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const collapseEl = document.querySelector(`#${id}`)\r\n    collapseEl.addEventListener('transitionend', () => setCollapsing(false))\r\n    setCollapseNav(collapseEl)\r\n  }, [])\r\n  useEffect(() => {\r\n    if (collapseNav) {\r\n      if (open) {\r\n        collapseNav.style.width = collapseNav.scrollWidth + 'px'\r\n      } else {\r\n        const activeItem = document.querySelector(\r\n          `#${id} .collapse-item.active`\r\n        )\r\n        if (activeItem) {\r\n          collapseNav.style.width = activeItem.scrollWidth + 'px'\r\n        }\r\n      }\r\n    }\r\n  }, [open])\r\n\r\n  const handleClick = () => {\r\n    setCollapsing(true)\r\n    setOpen(!open)\r\n  }\r\n\r\n  return (\r\n    <Provider value={handleClick}>\r\n      <div\r\n        id={id}\r\n        className={`collapse-nav pl-0 mb-0 ${collapsing ? 'collapsing' : ''} ${\r\n          open ? 'show' : ''\r\n        } ${className}`}\r\n        {...attrs}\r\n      >\r\n        {children}\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport const CollapseItem = ({ children, className, onClick, active, ...attrs }) => {\r\n  const handleClick = useContext(ctx)\r\n  return (\r\n    <div\r\n      className={`collapse-item ${active ? 'active' : ''} ${className}`}\r\n      onClick={handleClick}\r\n      {...attrs}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollapseNav\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setFilter } from 'features/todos/todoSlice'\r\nimport CollapseNav, { CollapseItem } from 'components/CollapseNav'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction TodoFilterNav({ ...attrs }) {\r\n  const { filter, filterTypes } = useSelector(({ todo }) => ({\r\n    filter: todo.filter,\r\n    filterTypes: todo.filterTypes,\r\n  }))\r\n  const dispatch = useDispatch()\r\n  const onClick = (type) => dispatch(setFilter(type))\r\n  return (\r\n    <>\r\n      <CollapseNav id=\"todosFilterNav\" {...attrs}>\r\n        {filterTypes.map((el, i) => {\r\n          const active = filter === el\r\n          return (\r\n            <CollapseItem key={i} active={active}>\r\n              <Button\r\n                variant=\"link\"\r\n                className={`p-0 ${active ? '' : 'opacity-weak'}`}\r\n                onClick={() => onClick(el)}\r\n              >\r\n                {el}\r\n              </Button>\r\n            </CollapseItem>\r\n          )\r\n        })}\r\n      </CollapseNav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoFilterNav\r\n","import React, { useRef, useEffect } from 'react'\r\nimport Chart from 'chart.js'\r\nimport moment from 'moment'\r\nimport 'chartjs-plugin-zoom'\r\n\r\nlet barChart = null\r\nexport default function TimeBarChart({ data: propData = [], centerTime }) {\r\n  const canvas = useRef()\r\n  const options = {\r\n    aspectRatio: 1.4,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          id: 'barX',\r\n          display: true,\r\n          type: 'time',\r\n          time: {\r\n            minUnit: 'day',\r\n            displayFormats: {\r\n              day: 'D MMM',\r\n              month: 'MMM YYYY',\r\n            },\r\n          },\r\n          ticks: {\r\n            min: moment(centerTime).clone().subtract(3, 'days').valueOf(),\r\n            max: moment(centerTime).clone().add(3, 'days').valueOf(),\r\n            maxRotation: 30,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          id: 'barY',\r\n          display: true,\r\n          scaleLabel: {\r\n            display: true,\r\n          },\r\n          ticks: {\r\n            beginAtZero: true,\r\n            stepSize: 1,\r\n            maxTicksLimit: 10,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        title: () => '',\r\n        beforeLabel: (arg, data) => {\r\n          const time = moment(arg.xLabel)\r\n          const day = time.day()\r\n          const month = time.month()\r\n          return `${month}月${day}號`\r\n        },\r\n        label: (arg, data) => {\r\n          return arg.value\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      zoom: {\r\n        pan: {\r\n          enabled: true,\r\n          mode: 'x',\r\n          rangeMin: {\r\n            x: null,\r\n            y: 0,\r\n          },\r\n          // On category scale, factor of pan velocity\r\n          speed: 0.5,\r\n\r\n          // Minimal pan distance required before actually applying pan\r\n          threshold: 10,\r\n\r\n          // Function called while the user is panning\r\n          onPan: function ({ chart }) {},\r\n          // Function called once panning is completed\r\n          onPanComplete: function ({ chart }) {},\r\n        },\r\n        zoom: {\r\n          enabled: true,\r\n\r\n          mode: 'x',\r\n          rangeMin: {\r\n            x: null,\r\n            y: 0,\r\n          },\r\n          // Speed of zoom via mouse wheel\r\n          // (percentage of zoom on a wheel event)\r\n          speed: 0.1,\r\n\r\n          // On category scale, minimal zoom level before actually applying zoom\r\n          sensitivity: 3,\r\n\r\n          // Function called while the user is zooming\r\n          onZoom: function ({ chart }) {\r\n            console.log(chart)\r\n          },\r\n          // Function called once zooming is completed\r\n          onZoomComplete: function ({ chart }) {},\r\n        },\r\n      },\r\n    },\r\n  }\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        yAxisID: 'barY',\r\n        xAxisID: 'barX',\r\n        backgroundColor: '#f4b5a5',\r\n      },\r\n    ],\r\n  }\r\n  useEffect(() => {\r\n    const range = [\r\n      moment(centerTime).clone().subtract(3, 'days'),\r\n      moment(centerTime).clone().add(3, 'days'),\r\n    ]\r\n    const momentData = propData.map(el => {\r\n      el.x = moment(el.x, [\"DD-M-YYYY\", \"DD-MM-YYYY\"])\r\n      return el\r\n    })\r\n    if (barChart) {\r\n      barChart.destroy()\r\n    }\r\n    data.datasets[0].data = momentData\r\n    options.scales.xAxes[0].ticks.min = range[0].valueOf()\r\n    options.scales.xAxes[0].ticks.max = range[1].valueOf()\r\n    barChart = new Chart(canvas.current, {\r\n      type: 'bar',\r\n      data,\r\n      options,\r\n    })\r\n  }, [propData, centerTime])\r\n\r\n  return (\r\n    <>\r\n      <canvas ref={canvas}>\r\n        Your browser does not support the canvas element.\r\n      </canvas>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport TimeBarChart from './TimeBarChart'\r\nimport { useSelector } from 'react-redux'\r\nimport { createSelector } from '@reduxjs/toolkit'\r\n\r\nconst workTimesSelector = createSelector(\r\n  ({ record }) => record.workTimes,\r\n  (workTimes) => {\r\n    const data = []\r\n    for (const date in workTimes) {\r\n      data.push({ x: date, y: workTimes[date] })\r\n    }\r\n    return data\r\n  }\r\n)\r\n\r\nconst RecordReport = () => {\r\n  const centerTime = useSelector(({ record }) => record.chartCenter)\r\n  const data = useSelector(workTimesSelector)\r\n  return (\r\n    <>\r\n      <TimeBarChart data={data} centerTime={centerTime} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecordReport\r\n","import React, { useState } from 'react'\r\nimport VendorDatePicker from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nfunction DatePicker({ className = '', ...attrs }) {\r\n  const [startDate, setStartDate] = useState(new Date())\r\n\r\n  return (\r\n    <VendorDatePicker\r\n      selected={startDate}\r\n      onChange={setStartDate}\r\n      className={`border-0 form-control ${className}`}\r\n      {...attrs}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DatePicker\r\n","import React from 'react'\r\nimport DatePicker from 'components/DatePicker'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setChartCenter } from \"features/record/recordSlice\";\r\n\r\nconst ChartController = ({ ...attrs }) => {\r\n  const dispatch = useDispatch()\r\n  const date = useSelector(({ record }) => record.chartCenter) || new Date()\r\n  const pickerHandler = (e) => dispatch(setChartCenter(e.valueOf()))\r\n  return (\r\n    <div {...attrs}>\r\n      <DatePicker selected={date} onChange={pickerHandler} className=\"w-110px\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartController\r\n","import React from 'react'\r\nimport FilterTodoList from 'features/todos/FilterTodoList'\r\nimport TodoInput from 'features/todos/TodoInput'\r\nimport TodoFilterNav from 'features/todos/TodoFilterNav'\r\nimport RecordReport from 'features/record/RecordReport'\r\nimport ChartController from 'features/record/ChartController'\r\n\r\nexport default function Report() {\r\n  return (\r\n      <div className=\"row py-4 py-md-7\">\r\n        <div className=\"col-12 mb-3 mb-md-5\">\r\n          <h1 className=\"text-pink\">Record</h1>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <ChartController className=\"d-flex justify-content-end\" />\r\n          <RecordReport />\r\n        </div>\r\n        <div className=\"col-lg-4 offset-lg-1 pt-3 pt-md-0\">\r\n          <TodoInput />\r\n          <div className=\"pb-3 d-flex align-items-center\">\r\n            <TodoFilterNav className=\"ml-auto\" />\r\n          </div>\r\n          <FilterTodoList />\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport withFilterTodos from './withFilterTodos'\r\nimport TodoList from './TodoList'\r\n\r\nconst UndoneTodoList = ({ todos, ...attrs }) => {\r\n  const undoneTodos = todos.filter((todo) => !todo.completed)\r\n  return <TodoList todos={undoneTodos} maxHeight=\"200px\" {...attrs} />\r\n}\r\n\r\nexport default withFilterTodos(UndoneTodoList)\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { transSecondToMinute } from 'utils/timeTransform'\r\n\r\nconst Clock = ({ className = '' }) => {\r\n  const { time, modeTime, mode } = useSelector(({ clock }) => clock)\r\n  const secondTimd = transSecondToMinute(time)\r\n  const leftSlice = useRef()\r\n  const rightSlice = useRef()\r\n  useEffect(() => {\r\n    const totalTime = modeTime[mode]\r\n    const rate = time / totalTime\r\n    let rotateAngle = -rate * 360\r\n    if (rate >= 0.5) {\r\n      rightSlice.current.style.opacity = '1'\r\n      rightSlice.current.style.transform = `rotate(${rotateAngle}deg)`\r\n      leftSlice.current.style.transform = ''\r\n    } else {\r\n      rotateAngle += 180\r\n      leftSlice.current.style.transform = `rotate(${rotateAngle}deg)`\r\n      rightSlice.current.style.opacity = '0'\r\n    }\r\n  }, [time, mode])\r\n  return (\r\n    <div\r\n      className={`clock d-flex justify-content-center align-items-center ${className}`}\r\n    >\r\n      <div className=\"clock__slice--left\" />\r\n      <div ref={leftSlice} className=\"clock__cover-slice--left\" />\r\n      <div className=\"clock__slice--right\" />\r\n      <div ref={rightSlice} className=\"clock__cover-slice--right\" />\r\n      <p className=\"h1 text-pink position-relative\">\r\n        {secondTimd[0] + '：' + secondTimd[1]}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clock\r\n","export const transSecondToMinute = (secondsTime) => {\r\n  let minutes = Math.floor(secondsTime / 60)\r\n  minutes = minutes < 10 ? '0' + minutes : minutes\r\n  let seconds = secondsTime % 60\r\n  seconds = seconds < 10 ? '0' + seconds : seconds\r\n  return [minutes, seconds]\r\n}\r\n\r\nexport const transMinuteToSecond = (minutes, seconds) => {\r\n  return minutes * 60 + seconds\r\n}","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { start, stop, reset, toggleMode } from 'features/clock/clockSlice'\r\n\r\nconst ClockControl = () => {\r\n  const dispatch = useDispatch()\r\n  const startCount = () => dispatch(start())\r\n  const stopCount = () => dispatch(stop())\r\n  const resetClock = () => dispatch(reset())\r\n  const toggle = () => dispatch(toggleMode())\r\n  const status = useSelector(({ clock }) => clock.status)\r\n  return (\r\n    <div className=\"d-flex flex-row flex-md-column justify-content-center align-items-center\">\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={toggle}\r\n        className=\"opacity-weak\"\r\n        style={{ fontSize: '20px' }}\r\n      >\r\n        <i className=\"fas fa-random\"></i>\r\n      </Button>\r\n      <Button\r\n        variant=\"link\"\r\n        style={{ fontSize: '32px' }}\r\n        className=\"mt-2\"\r\n        onClick={status === 'running' ? stopCount : startCount}\r\n      >\r\n        {status === 'running' ? (\r\n          <i className=\"fas fa-pause\" />\r\n        ) : (\r\n          <i className=\"fas fa-play\" />\r\n        )}\r\n      </Button>\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={resetClock}\r\n        className=\"mt-2\"\r\n        className=\"opacity-weak\"\r\n        style={{ fontSize: '20px' }}\r\n      >\r\n        <i className=\"fas fa-redo-alt\" />\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ClockControl\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport getTodayString from 'utils/getDateString'\r\n\r\nconst Times = ({ className, ...attrs }) => {\r\n  const total = useSelector(({ record }) => record.workTimes[getTodayString()] || 0)\r\n  return (\r\n    <div className={`h3 text-pink ${className}`} {...attrs}>\r\n      <i className=\"fas fa-history mr-3 opacity-weak\" style={{\r\n        fontSize: '.70em',\r\n      }} />\r\n      {total}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Times\r\n","import React from 'react'\r\nimport UndoneTodoList from 'features/todos/UndoneTodoList'\r\nimport Clock from 'features/clock/Clock'\r\nimport ClockControl from 'features/clock/ClockControl'\r\nimport TodoInput from 'features/todos/TodoInput'\r\nimport Times from 'features/record/Times'\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <div className=\"row h-100 align-items-center\">\r\n        <div className=\"col-lg-7 pt-5 d-flex flex-column flex-md-row justify-content-center align-items-center\">\r\n          <div className=\"p-clock mb-4 mb-md-0 mr-md-5\">\r\n            <Clock />\r\n          </div>\r\n          <ClockControl />\r\n        </div>\r\n        <div className=\"col-lg-4 d-none d-md-flex flex-column justify-content-center\">\r\n          <Times className=\"mb-3\" />\r\n          <TodoInput outline />\r\n          <UndoneTodoList />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setRestRing, setWorkRing, play } from './ringSlice'\r\n\r\nconst RingItem = ({ rId, children }) => {\r\n  const dispatch = useDispatch()\r\n  const textWidth = 120\r\n  const text = useRef(null)\r\n  useEffect(() => {\r\n    const textNode = text.current\r\n    if (+textNode.scrollWidth > textWidth) {\r\n      textNode.style.fontSize = '.85em'\r\n    }\r\n  }, [children])\r\n\r\n  return (\r\n    <>\r\n      <Dropdown as={ButtonGroup} className=\"mr-4 mb-3\">\r\n        <Button\r\n          variant=\"outline-pink\"\r\n          block\r\n          className=\"text-left text-nowrap overflow-hidden\"\r\n          onClick={() => dispatch(play(rId))}\r\n        >\r\n          <i className=\"far fa-bell mr-2 opacity-weak\"></i>\r\n          <span\r\n            ref={text}\r\n            className=\"d-inline-block align-baseline\"\r\n            style={{ width: `${textWidth}px`, whiteSpace: 'nowrap' }}\r\n          >\r\n            {children}\r\n          </span>\r\n        </Button>\r\n        <Dropdown.Toggle\r\n          split\r\n          flip={'false'}\r\n          variant=\"outline-pink\"\r\n          id=\"ring-dropdown-split-basic\"\r\n        />\r\n        <Dropdown.Menu alignRight>\r\n          <Dropdown.Item onClick={() => dispatch(setWorkRing(rId))}>\r\n            for work\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item onClick={() => dispatch(setRestRing(rId))}>\r\n            for rest\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RingItem\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport RingItem from './RingItem'\r\n\r\nconst RingList = ({ className }) => {\r\n  const rings = useSelector(({ ring }) => ring.rings)\r\n  const rNames = Object.keys(rings) || []\r\n  return (\r\n    <ul className={`pl-0 ${className}`}>\r\n      {rNames.map((rName, i) => (\r\n        <RingItem key={i} rId={rName}>\r\n          {rName}\r\n        </RingItem>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default RingList\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport RingList from 'features/ring/RingList'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { play } from 'features/ring/ringSlice'\r\n\r\nconst Ring = () => {\r\n  const workRing = useSelector(({ ring }) => ring.workRing)\r\n  const restRing = useSelector(({ ring }) => ring.restRing)\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div className=\"row pt-3 py-md-7\">\r\n      <div className=\"col-lg-2\">\r\n        <h1 className=\"mb-2 text-pink\">Rings</h1>\r\n      </div>\r\n      <div className=\"col pt-3\">\r\n        <div className=\"d-flex flex-wrap mb-5\">\r\n          <div className=\"mr-md-5\">\r\n            <h2 className=\"h5 mr-3 text-pink\">work</h2>\r\n            <Button variant=\"link\" onClick={() => dispatch(play(workRing))}>\r\n              <i className=\"fas fa-bell fa-lg mr-2 opacity-weak align-baseline\" />\r\n              <span className=\"h4\">{workRing}</span>\r\n            </Button>\r\n          </div>\r\n          <div className=\"align-bottom\">\r\n            <h2 className=\"h5 mr-3 text-pink\">rest</h2>\r\n            <Button variant=\"link\" onClick={() => dispatch(play(restRing))}>\r\n              <i className=\"fas fa-bell fa-lg mr-2 opacity-weak align-baseline\" />\r\n              <span className=\"h4\">{restRing}</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <RingList />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ring\r\n","export default class AudioPlayer {\r\n  constructor(src) {\r\n    this._src = src\r\n    this._loadPromise = null\r\n    this._timeOut = null\r\n    this._status = 'pause'\r\n    this._audio = new Audio(src)\r\n    this._audio.loop = true\r\n    this._audio.addEventListener('loadstart', e => {\r\n      this._status = 'loading'\r\n    })\r\n    this._audio.addEventListener('playing', e => {\r\n      this._status = 'playing'\r\n    })\r\n  }\r\n  play() {\r\n    this._loadPromise = this._audio.play()\r\n    return this\r\n  }\r\n  async pause() {\r\n    await this._loadPromise\r\n    this._audio.pause()\r\n    this._status = 'pause'\r\n    return this\r\n  }\r\n  async pauseAfterTimes(time) {\r\n    await this._loadPromise\r\n    return new Promise((resolve, reject) => {\r\n      this._timeOut = setTimeout(() => {\r\n        this._audio.pause()\r\n        resolve()\r\n      }, time)\r\n    })\r\n  }\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { WORK_TIMESUP, REST_TIMESUP } from 'features/clock/clockSlice'\r\nimport getFromLocalStorage from 'utils/getFromLocalStorage'\r\nimport AudioPlayer from 'utils/audioPlayer'\r\n\r\nlet audioPlayer = null\r\nexport const play = createAsyncThunk(\r\n  'ring/play',\r\n  async (rId, thunkAPI) => {\r\n    try {\r\n      const { getState } = thunkAPI\r\n      const ringFile = getState().ring.rings[rId]\r\n      if (audioPlayer !== null) {\r\n        audioPlayer.pause()\r\n      }\r\n      audioPlayer = new AudioPlayer(process.env.PUBLIC_URL + '/audios/' + ringFile)\r\n      return audioPlayer.play().pauseAfterTimes(2500)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n)\r\n\r\nconst ringSlice = createSlice({\r\n  name: 'ring',\r\n  initialState: {\r\n    rings: {\r\n      Bugle_Tune: 'Bugle_Tune.mp3',\r\n      \"Deep-Church-Bell-02\": 'Deep-Church-Bell-02.wav',\r\n      \"High-Metal-Bell-02\": 'High-Metal-Bell-02.wav',\r\n      \"Low-Metal-Bell-02\": 'Low-Metal-Bell-02.wav',\r\n      \"Odd-Metal-Chime\": 'Odd-Metal-Chime.wav',\r\n      \"Tibetian-Bells-02\": 'Tibetian-Bells-02.wav',\r\n      \"Clear-Long-Bell-02\": 'Clear-Long-Bell-02.wav',\r\n      \"Digital_Watch_Alarm_Long\": 'Digital_Watch_Alarm_Long.mp3',\r\n      \"High-Pitch-Bell-Slide-Up\": 'High-Pitch-Bell-Slide-Up.wav',\r\n      \"Mechanical_Clock_Ring\": 'Mechanical_Clock_Ring.mp3',\r\n      \"Radiation_Meter\": 'Radiation_Meter.mp3',\r\n      \"Timer-Bell\": 'Timer-Bell.wav',\r\n    },\r\n    restRing: getFromLocalStorage('rings')?.restRing || 'Deep-Church-Bell-02',\r\n    workRing: getFromLocalStorage('rings')?.workRing || 'Bugle_Tune',\r\n    isPlaying: false, // playing or stop\r\n    playingRing: '',\r\n  },\r\n  reducers: {\r\n    setRestRing(state, action) {\r\n      state.restRing = action.payload\r\n    },\r\n    setWorkRing(state, action) {\r\n      state.workRing = action.payload\r\n    }\r\n  },\r\n  extraReducers: builder => {\r\n    builder.addCase(play.pending, (state, action) => {\r\n      state.isPlaying = true\r\n      state.playingRing = action.meta.arg\r\n    })\r\n    builder.addCase(play.fulfilled, (state, action) => {\r\n      state.isPlaying = false\r\n      state.playingRing = ''\r\n    })\r\n  }\r\n})\r\n\r\nexport const { setRestRing, setWorkRing } = ringSlice.actions\r\nexport default ringSlice.reducer","import { combineReducers } from 'redux'\r\nimport todo from 'features/todos/todoSlice'\r\nimport clock from 'features/clock/clockSlice'\r\nimport ring from 'features/ring/ringSlice'\r\nimport record from 'features/record/recordSlice'\r\n\r\nexport default combineReducers({ todo, clock, ring, record })","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const saveDataFromStore = (store) =>\r\n  (seletorObj) =>\r\n    () => {\r\n      const state = store.getState()\r\n      const keys = Object.keys(seletorObj)\r\n      keys.forEach(key => {\r\n        const seletor = seletorObj[key]\r\n        const jsonData = JSON.stringify(seletor(state))\r\n        localStorage.setItem(key, jsonData)\r\n      });\r\n    }\r\n\r\nexport default saveDataFromStore","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport configureAppStore from \"./configureStore\";\r\nimport './scss/index.scss'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport saveDataFromStore from 'utils/saveDataFromStore'\r\n\r\nconst store = configureAppStore();\r\nstore.subscribe(saveDataFromStore(store)({\r\n  todos: ({ todo }) => todo.todos,\r\n  work_times: ({ record }) => record.workTimes,\r\n  rings: ({ ring }) => ({ restRing: ring.restRing, workRing: ring.workRing }),\r\n  clock: ({ clock }) => ({ mode: clock.mode, time: clock.time })\r\n}))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default function configureAppStore() {\r\n  const store = configureStore({ reducer: rootReducer })\r\n\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n  }\r\n  \r\n  return store\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport getFromLocalstorage from 'utils/getFromLocalStorage'\r\n\r\nconst getRandom = () => {\r\n  return Math.floor(Math.random() * 1000000)\r\n}\r\n\r\nconst todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState: {\r\n    todos: getFromLocalstorage('todos') || [],\r\n    filter: 'all',\r\n    filterTypes: ['all', 'undone', 'done'],\r\n  },\r\n  reducers: {\r\n    addTodo: {\r\n      reducer: (state, action) => {\r\n        const { id, text } = action.payload\r\n        state.todos.unshift({ id, text, completed: false })\r\n      },\r\n      prepare: text => {\r\n        return { payload: { id: getRandom(), text } }\r\n      }\r\n    },\r\n    toggleCompleted(state, action) {\r\n      const targetTodo = state.todos.find(el => +el.id === +action.payload)\r\n      targetTodo.completed = !targetTodo.completed\r\n    },\r\n    updateTodo(state, action) {\r\n      const { id, text } = action.payload\r\n      const targetTodo = state.todos.find(el => +el.id === +id)\r\n      targetTodo.text = text\r\n    },\r\n    deleteTodo(state, action) {\r\n      const newTodos = state.todos.filter(el => +el.id !== +action.payload)\r\n      state.todos = newTodos\r\n    },\r\n    setFilter(state, action) {\r\n      state.filter = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { addTodo, toggleCompleted, updateTodo, deleteTodo, setFilter } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","const getFromLocalstorage = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key))\r\n  } catch (error) {\r\n    return false\r\n  }\r\n}\r\nexport default getFromLocalstorage ","import { createSlice, createAsyncThunk, createAction } from '@reduxjs/toolkit'\r\nimport getFromLocalStorage from 'utils/getFromLocalStorage'\r\nimport { play } from 'features/ring/ringSlice'\r\nlet countInterval = null\r\n\r\nexport const WORK_TIMESUP = 'WORK_TIMESUP'\r\nexport const REST_TIMESUP = 'REST_TIMESUP'\r\nexport const COUNT_DOWM = 'COUNT_DOWM'\r\nexport const workTimesUp = createAction(WORK_TIMESUP)\r\nexport const restTimesUp = createAction(REST_TIMESUP)\r\nexport const countDown = createAction(COUNT_DOWM)\r\n\r\nexport const start = createAsyncThunk(\r\n  'clock/start',\r\n  async (payload, thunkAPI) => {\r\n    const { getState, dispatch } = thunkAPI\r\n    const { status } = getState().clock\r\n    if (status === 'running') {\r\n      throw new Error()\r\n    }\r\n    countInterval = setInterval(() => {\r\n      const { clock, ring } = getState()\r\n      const { workRing, restRing } = ring\r\n      if (+clock.time === 0) {\r\n        if (clock.mode === 'work') {\r\n          dispatch(workTimesUp())\r\n          dispatch(play(workRing))\r\n        } else {\r\n          dispatch(restTimesUp())\r\n          dispatch(play(restRing))\r\n        }\r\n      }\r\n      dispatch({ type: 'clock/countDown' })\r\n    }, 1000);\r\n  }\r\n)\r\n\r\nconst modeTime = {\r\n  work: 1500,\r\n  rest: 300\r\n}\r\n\r\nconst clockSlice = createSlice({\r\n  name: 'clock',\r\n  initialState: {\r\n    mode: getFromLocalStorage('clock')?.mode || 'work', // work or rest\r\n    modeTime: modeTime,\r\n    status: 'stop', // running, stop\r\n    time: getFromLocalStorage('clock')?.time || modeTime['work']\r\n  },\r\n  reducers: {\r\n    stop: {\r\n      reducer: (state, action) => {\r\n        state.status = 'stop'\r\n      },\r\n      prepare: () => {\r\n        clearInterval(countInterval)\r\n        return {}\r\n      }\r\n    },\r\n    reset: {\r\n      reducer: (state, action) => {\r\n        const { mode, modeTime } = state\r\n        state.time = modeTime[mode]\r\n        state.status = 'stop'\r\n      },\r\n      prepare: () => {\r\n        clearInterval(countInterval)\r\n        return {}\r\n      }\r\n    },\r\n    toggleMode(state, action) {\r\n      const { mode, modeTime } = state\r\n      const nextMode = mode === 'work' ? 'rest' : 'work'\r\n      state.mode = nextMode\r\n      state.time = modeTime[nextMode]\r\n    },\r\n    countDown(state, action) {\r\n      state.time -= 1\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [start.fulfilled]: (state, action) => {\r\n      state.status = 'running'\r\n    },\r\n    [start.rejected]: (state, action) => {\r\n      console.log(action.payload)\r\n    },\r\n    [WORK_TIMESUP](state, action) {\r\n      const nextMode = 'rest'\r\n      state.mode = nextMode\r\n      state.time = modeTime[nextMode]\r\n    },\r\n    [REST_TIMESUP](state, action) {\r\n      const nextMode = 'work'\r\n      state.mode = nextMode\r\n      state.time = modeTime[nextMode]\r\n    }\r\n  }\r\n})\r\n\r\nexport const { stop, reset, toggleMode } = clockSlice.actions\r\n\r\nexport default clockSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport getDateString from 'utils/getDateString'\r\nimport { WORK_TIMESUP } from 'features/clock/clockSlice'\r\nimport getFromLocalstorage from 'utils/getFromLocalStorage'\r\n\r\nconst today = getDateString()\r\nconst record = createSlice({\r\n  name: 'record',\r\n  initialState: {\r\n    chartCenter: Date.now(),\r\n    workTimes: getFromLocalstorage('work_times') || {},\r\n  },\r\n  reducers: {\r\n    setChartCenter: (state, action) => {\r\n      state.chartCenter = action.payload\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [WORK_TIMESUP]: (state, action) => {\r\n      state.workTimes[today] ? state.workTimes[today] += 1 : state.workTimes[today] = 1\r\n    }\r\n  }\r\n})\r\n\r\nexport const { setChartCenter } = record.actions\r\nexport default record.reducer","const getDateString = (date) => {\r\n  const dateIns = date ? new Date(date) : new Date()\r\n  const day = dateIns.getDate()\r\n  const month = dateIns.getMonth() + 1\r\n  const fullYear = dateIns.getFullYear()\r\n  return `${day}-${month}-${fullYear}`\r\n}\r\n\r\nexport default getDateString","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst selectTodos = ({ todo }) => {\r\n  if (todo.filter === 'all') {\r\n    return todo.todos\r\n  } else if (todo.filter === 'undone') {\r\n    return todo.todos.filter((todo) => !todo.completed)\r\n  } else {\r\n    return todo.todos.filter((todo) => todo.completed)\r\n  }\r\n}\r\n\r\nconst withFilterTodos = (Component) => ({ ...attrs }) => {\r\n  const todos = useSelector(selectTodos)\r\n  return <Component todos={todos} {...attrs} />\r\n}\r\n\r\nexport default withFilterTodos\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo } from './todoSlice'\r\n\r\nfunction TodoInput({ outline }) {\r\n  const dispatch = useDispatch()\r\n  const [input, setInput] = useState('')\r\n  const handleChange = (e) => setInput(e.target.value)\r\n  const handleAdd = (e) => {\r\n    if (input === '') return\r\n    dispatch(addTodo(input))\r\n    setInput('')\r\n  }\r\n  return (\r\n    <div className=\"d-flex mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        className=\"form-control border-bottom\"\r\n      />\r\n      <button\r\n        className={`ml-2 py-0 btn ${\r\n          outline ? 'btn-outline-pink' : 'btn-pink text-white'\r\n        } btn-sm flex-shrink-0`}\r\n        onClick={handleAdd}\r\n        style={{\r\n          height: '2.3em'\r\n        }}\r\n      >\r\n        新增\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoInput\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Todo({\r\n  text,\r\n  completed,\r\n  toggleCompleted,\r\n  updateTodo,\r\n  deleteTodo,\r\n  ...attrs\r\n}) {\r\n  return (\r\n    <li\r\n      className=\"list-group-item d-flex align-items-center border-0\"\r\n      {...attrs}\r\n    >\r\n      <Button\r\n        variant=\"link\"\r\n        className={`${completed ? 'opacity-weak' : ''}`}\r\n        onClick={toggleCompleted}\r\n        style={{ width: '5em' }}\r\n      >\r\n        {completed ? 'done' : 'undone'}\r\n      </Button>\r\n      <input\r\n        variant=\"link\"\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => updateTodo(e.target.value)}\r\n        className={`mr-2 border-0 flex-grow-1 form-control ${\r\n          completed ? 'opacity-weak' : ''\r\n        }`}\r\n      />\r\n      <Button\r\n        variant=\"link\"\r\n        onClick={deleteTodo}\r\n        className={!completed ? 'opacity-weak' : ''}\r\n      >\r\n        <i className=\"fas fa-times\"></i>\r\n      </Button>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleCompleted, updateTodo, deleteTodo } from './todoSlice'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, maxHeight }) => {\r\n  const dispatch = useDispatch()\r\n  const handleUpdateTodo = (id) => (text) => {\r\n    dispatch(updateTodo({ id, text }))\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className=\"list-group scrollbar\"\r\n      style={{ maxHeight: maxHeight ? maxHeight : '360px' }}\r\n    >\r\n      {todos.map((el) => (\r\n        <Todo\r\n          key={el.id}\r\n          text={el.text}\r\n          completed={el.completed}\r\n          toggleCompleted={() => dispatch(toggleCompleted(el.id))}\r\n          updateTodo={handleUpdateTodo(el.id)}\r\n          deleteTodo={() => dispatch(deleteTodo(el.id))}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n"],"sourceRoot":""}