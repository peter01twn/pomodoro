{"version":3,"sources":["reducers/index.js","serviceWorker.js","utils/saveDataFromStore.js","index.js","configureStore.js","features/todos/todoSlice.js","components/TextBtn.jsx","features/clock/clockSlice.js","utils/getTodayString.js","features/todos/withFilterTodos.jsx","features/todos/TodoInput.jsx","features/todos/Todo.jsx","features/todos/TodoList.jsx","App.js","features/todos/UndoneTodoList.jsx","features/clock/Clock.jsx","utils/transSecondToMinute.js","features/clock/ClockControl.jsx","features/todos/TodayTotal.jsx","pages/Index.jsx","features/todos/FilterTodoList.jsx","components/CollapseNav.jsx","features/todos/TodoFilterNav.jsx","components/DatePicker.jsx","pages/Report.jsx","components/LightNavLink.jsx","components/SideBar.jsx"],"names":["combineReducers","todo","clock","Boolean","window","location","hostname","match","saveDataFromStore","store","seletorObj","state","getState","Object","keys","forEach","key","seletor","jsonData","JSON","stringify","localStorage","setItem","configureStore","reducer","rootReducer","subscribe","todos","daily_total","dailyTotal","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","getLocalstorage","parse","getItem","today","getTodayString","todoSlice","createSlice","name","initialState","filter","filterTypes","reducers","addTodo","action","payload","id","text","unshift","completed","prepare","Math","floor","random","toggleCompleted","targetTodo","find","el","updateTodo","deleteTodo","newTodos","setFilter","extraReducers","timesUp","actions","TextBtn","children","className","attrs","countInterval","start","createAsyncThunk","p","thunkAPI","a","dispatch","status","Error","setInterval","time","mode","type","clockSlice","modeTime","work","rest","stop","clearInterval","reset","toggleMode","nextMode","fulfilled","dateIns","Date","date","getDate","month","getMonth","fullYear","getFullYear","selectTodos","withFilterTodos","Component","useSelector","TodoInput","outline","useDispatch","useState","input","setInput","value","onChange","e","target","onClick","style","height","Todo","width","opacity","TodoList","maxHeight","map","hot","module","marginRight","path","undoneTodos","Clock","secondsTime","minutes","seconds","tansformTime","ClockControl","fontSize","TodayTotal","total","Index","marginTop","ctx","React","createContext","Provider","CollapseItem","Consumer","active","handleClick","useContext","CollapseNav","open","setOpen","collapsing","setCollapsing","collapseNav","setCollapseNav","useEffect","collapseEl","querySelector","addEventListener","scrollWidth","activeItem","TodoFilterNav","i","DatePicker","startDate","setStartDate","selected","Report","FilterTodoList","LightNavLink","exact","avtiveclassname","SideBar","to"],"mappings":"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","file":"static/js/main.946bc3a6.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\r\nimport todo from 'features/todos/todoSlice'\r\nimport clock from 'features/clock/clockSlice'\r\n\r\nexport default combineReducers({ todo, clock })","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const saveDataFromStore = (store) =>\r\n  (seletorObj) =>\r\n    () => {\r\n      const state = store.getState()\r\n      const keys = Object.keys(seletorObj)\r\n      keys.forEach(key => {\r\n        const seletor = seletorObj[key]\r\n        const jsonData = JSON.stringify(seletor(state))\r\n        localStorage.setItem(key, jsonData)\r\n      });\r\n    }\r\n\r\nexport default saveDataFromStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport configureAppStore from \"./configureStore\";\nimport './scss/index.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport saveDataFromStore from 'utils/saveDataFromStore'\n\nconst store = configureAppStore();\nstore.subscribe(saveDataFromStore(store)({\n  todos: ({ todo }) => todo.todos,\n  daily_total: ({ todo }) => todo.dailyTotal\n}))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default function configureAppStore() {\r\n  const store = configureStore({ reducer: rootReducer })\r\n\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n  }\r\n  \r\n  return store\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport getTodayString from 'utils/getTodayString'\r\n\r\nconst getRandom = () => {\r\n  return Math.floor(Math.random() * 1000000)\r\n}\r\n\r\nconst getLocalstorage = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key))\r\n  } catch (error) {\r\n    return false\r\n  }\r\n}\r\n\r\nconst today = getTodayString()\r\n\r\nconst todoSlice = createSlice({\r\n  name: 'todo',\r\n  initialState: {\r\n    todos: getLocalstorage('todos') || [],\r\n    filter: 'all',\r\n    filterTypes: ['all', 'undone', 'done'],\r\n    dailyTotal: getLocalstorage('dailyTotal') || {}\r\n  },\r\n  reducers: {\r\n    addTodo: {\r\n      reducer: (state, action) => {\r\n        const { id, text } = action.payload\r\n        state.todos.unshift({ id, text, completed: false })\r\n      },\r\n      prepare: text => {\r\n        return { payload: { id: getRandom(), text } }\r\n      }\r\n    },\r\n    toggleCompleted(state, action) {\r\n      const targetTodo = state.todos.find(el => +el.id === +action.payload)\r\n      targetTodo.completed = !targetTodo.completed\r\n    },\r\n    updateTodo(state, action) {\r\n      const { id, text } = action.payload\r\n      const targetTodo = state.todos.find(el => +el.id === +id)\r\n      targetTodo.text = text\r\n    },\r\n    deleteTodo(state, action) {\r\n      const newTodos = state.todos.filter(el => +el.id !== +action.payload)\r\n      state.todos = newTodos\r\n    },\r\n    setFilter(state, action) {\r\n      state.filter = action.payload\r\n    }\r\n  },\r\n  extraReducers: {\r\n    timesUp(state, action) {\r\n      state.dailyTotal[today] ? state.dailyTotal[today] += 1 : state.dailyTotal[today] = 1\r\n    }\r\n  }\r\n})\r\n\r\nexport const { addTodo, toggleCompleted, updateTodo, deleteTodo, setFilter } = todoSlice.actions\r\n\r\nexport default todoSlice.reducer","import React from 'react'\r\n\r\nconst TextBtn = ({ children, className, ...attrs }) => {\r\n  return (\r\n    <button className={`btn text-pink ${className}`} {...attrs}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TextBtn\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nlet countInterval = null\r\n\r\nexport const start = createAsyncThunk(\r\n  'clock/start',\r\n  async (p, thunkAPI) => {\r\n    const { getState, dispatch } = thunkAPI\r\n    const { status } = getState().clock\r\n    if (status === 'running') {\r\n      throw new Error()\r\n    }\r\n    countInterval = setInterval(() => {\r\n      const { clock } = getState()\r\n      if (+clock.time === 0) {\r\n        if (clock.mode === 'work') {\r\n          dispatch({ type: 'timesUp' })\r\n        }\r\n        dispatch({ type: 'clock/toggleMode' })\r\n      }\r\n      dispatch({ type: 'countDown' })\r\n    }, 1000);\r\n  }\r\n)\r\n\r\nconst clockSlice = createSlice({\r\n  name: 'clock',\r\n  initialState: {\r\n    mode: 'work', // work or rest\r\n    modeTime: {\r\n      work: 1800,\r\n      rest: 300\r\n    },\r\n    status: 'stop ', // running, stop\r\n    time: 1800\r\n  },\r\n  reducers: {\r\n    stop: {\r\n      reducer: (state, action) => {\r\n        state.status = 'stop'\r\n      },\r\n      prepare: () => {\r\n        clearInterval(countInterval)\r\n        return {}\r\n      }\r\n    },\r\n    reset: {\r\n      reducer: (state, action) => {\r\n        const { mode, modeTime } = state\r\n        state.time = modeTime[mode]\r\n        state.status = 'stop'\r\n      },\r\n      prepare: () => {\r\n        clearInterval(countInterval)\r\n        return {}\r\n      }\r\n    },\r\n    toggleMode(state, action) {\r\n      const { mode, modeTime } = state\r\n      const nextMode = mode === 'work' ? 'rest' : 'work'\r\n      state.mode = nextMode\r\n      state.time = modeTime[nextMode]\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [start.fulfilled]: (state, action) => {\r\n      state.status = 'running'\r\n    },\r\n    countDown(state, action) {\r\n      state.time -= 1\r\n    }\r\n  }\r\n})\r\n\r\nexport const { stop, reset, toggleMode } = clockSlice.actions\r\n\r\nexport default clockSlice.reducer\r\n","const getTodayString = () => {\r\n  const dateIns = new Date()\r\n  const date = dateIns.getDate()\r\n  const month = dateIns.getMonth() + 1\r\n  const fullYear = dateIns.getFullYear()\r\n  return `${date}-${month}-${fullYear}`\r\n}\r\n\r\nexport default getTodayString","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst selectTodos = ({ todo }) => {\r\n  if (todo.filter === 'all') {\r\n    return todo.todos\r\n  } else if (todo.filter === 'undone') {\r\n    return todo.todos.filter((todo) => !todo.completed)\r\n  } else {\r\n    return todo.todos.filter((todo) => todo.completed)\r\n  }\r\n}\r\n\r\nconst withFilterTodos = (Component) => ({ ...attrs }) => {\r\n  const todos = useSelector(selectTodos)\r\n  return <Component todos={todos} {...attrs} />\r\n}\r\n\r\nexport default withFilterTodos\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo } from './todoSlice'\r\n\r\nfunction TodoInput({ outline }) {\r\n  const dispatch = useDispatch()\r\n  const [input, setInput] = useState('')\r\n  const handleChange = (e) => setInput(e.target.value)\r\n  const handleAdd = (e) => {\r\n    if (input === '') return\r\n    dispatch(addTodo(input))\r\n    setInput('')\r\n  }\r\n  return (\r\n    <div className=\"d-flex mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={handleChange}\r\n        className=\"form-control border-bottom py-0\"\r\n      />\r\n      <button\r\n        className={`ml-2 py-0 btn ${\r\n          outline ? 'btn-outline-pink text-pink' : 'btn-pink text-white'\r\n        } btn-sm flex-shrink-0`}\r\n        onClick={handleAdd}\r\n        style={{\r\n          height: '2.3em'\r\n        }}\r\n      >\r\n        新增\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoInput\r\n","import React from 'react'\r\nimport TextBtn from 'components/TextBtn'\r\n\r\nexport default function Todo({\r\n  text,\r\n  completed,\r\n  toggleCompleted,\r\n  updateTodo,\r\n  deleteTodo,\r\n  ...attrs\r\n}) {\r\n  return (\r\n    <li\r\n      className=\"list-group-item d-flex align-items-center border-0\"\r\n      {...attrs}\r\n    >\r\n      <TextBtn\r\n        className={`pl-0 ${completed ? 'disabled' : ''}`}\r\n        onClick={toggleCompleted}\r\n        style={{ width: '5em' }}\r\n      >\r\n        {completed ? 'done' : 'undone'}\r\n      </TextBtn>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={(e) => updateTodo(e.target.value)}\r\n        className={`mr-2 border-0 flex-grow-1 form-control`}\r\n        style={{ opacity: completed ? '.5' : '1' }}\r\n      />\r\n      <TextBtn onClick={deleteTodo} className={!completed ? 'disabled' : ''}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </TextBtn>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleCompleted, updateTodo, deleteTodo } from './todoSlice'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, maxHeight }) => {\r\n  const dispatch = useDispatch()\r\n  const handleUpdateTodo = (id) => (text) => {\r\n    dispatch(updateTodo({ id, text }))\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className=\"list-group scrollbar\"\r\n      style={{ maxHeight: maxHeight ? maxHeight : '360px' }}\r\n    >\r\n      {todos.map((el) => (\r\n        <Todo\r\n          key={el.id}\r\n          text={el.text}\r\n          completed={el.completed}\r\n          toggleCompleted={() => dispatch(toggleCompleted(el.id))}\r\n          updateTodo={handleUpdateTodo(el.id)}\r\n          deleteTodo={() => dispatch(deleteTodo(el.id))}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport { hot } from 'react-hot-loader'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport SideBar from 'components/SideBar'\nimport Index from 'pages/Index'\nimport Report from 'pages/Report'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <SideBar />\n        <div style={{ marginRight: '60px' }}>\n          <Switch>\n            <Route path=\"/report\">\n              <Report />\n            </Route>\n            <Route path=\"/\">\n              <Index />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default hot(module)(App);\n","import React from 'react'\r\nimport withFilterTodos from './withFilterTodos'\r\nimport TodoList from './TodoList'\r\n\r\nconst UndoneTodoList = ({ todos, ...attrs }) => {\r\n  const undoneTodos = todos.filter((todo) => !todo.completed)\r\n  return <TodoList todos={undoneTodos} maxHeight=\"200px\" {...attrs} />\r\n}\r\n\r\nexport default withFilterTodos(UndoneTodoList)\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport tansformTime from 'utils/transSecondToMinute'\r\n\r\nconst Clock = () => {\r\n  const time = useSelector(({ clock }) => {\r\n    return tansformTime(clock.time)\r\n  })\r\n  return (\r\n    <div className=\"clock mr-5 border-pink d-flex justify-content-center align-items-center\">\r\n      <p className=\"h1 text-pink\">{time[0] + '：' + time[1]}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clock\r\n","export default function transSecondToMinute(secondsTime) {\r\n  let minutes = Math.floor(secondsTime / 60)\r\n  minutes = minutes < 10 ? '0' + minutes : minutes\r\n  let seconds = secondsTime % 60\r\n  seconds = seconds < 10 ? '0' + seconds : seconds\r\n  return [minutes, seconds]\r\n}","import React from 'react'\r\nimport TextBtn from 'components/TextBtn'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { start, stop, reset, toggleMode } from 'features/clock/clockSlice'\r\n\r\nconst ClockControl = () => {\r\n  const dispatch = useDispatch()\r\n  const startCount = () => dispatch(start())\r\n  const stopCount = () => dispatch(stop())\r\n  const resetClock = () => dispatch(reset())\r\n  const toggle = () => dispatch(toggleMode())\r\n  const status = useSelector(({ clock }) => clock.status)\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n      <TextBtn\r\n        onClick={toggle}\r\n        className=\"text-pink-light\"\r\n        style={{ fontSize: '20px' }}\r\n      >\r\n        <i className=\"fas fa-random\"></i>\r\n      </TextBtn>\r\n      <TextBtn\r\n        style={{ fontSize: '32px' }}\r\n        className=\"mt-2\"\r\n        onClick={status === 'running' ? stopCount : startCount}\r\n      >\r\n        {status === 'running' ? (\r\n          <i className=\"fas fa-pause\" />\r\n        ) : (\r\n          <i className=\"fas fa-play\" />\r\n        )}\r\n      </TextBtn>\r\n      <TextBtn\r\n        onClick={resetClock}\r\n        className=\"mt-2 text-pink-light\"\r\n        style={{ fontSize: '20px' }}\r\n      >\r\n        <i className=\"fas fa-redo-alt\" />\r\n      </TextBtn>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ClockControl\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport getTodayString from 'utils/getTodayString'\r\n\r\nconst TodayTotal = ({ className, ...attrs }) => {\r\n  const total = useSelector(({ todo }) => todo.dailyTotal[getTodayString()] || 0)\r\n  return (\r\n    <div className={`h3 text-pink ${className}`} {...attrs}>\r\n      <i className=\"fas fa-history mr-3\" style={{\r\n        fontSize: '.70em',\r\n        opacity: '.75'\r\n      }} />\r\n      {total}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodayTotal\r\n","import React from 'react'\r\nimport UndoneTodoList from 'features/todos/UndoneTodoList'\r\nimport Clock from 'features/clock/Clock'\r\nimport ClockControl from 'features/clock/ClockControl'\r\nimport TodoInput from 'features/todos/TodoInput'\r\nimport TodayTotal from 'features/todos/TodayTotal'\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row vh-100\">\r\n          <div className=\"col-lg-7\">\r\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n              <Clock />\r\n              <ClockControl />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 d-flex flex-column justify-content-center\">\r\n            <TodayTotal\r\n              className=\"mb-3\"\r\n              style={{\r\n                marginTop: '-75px',\r\n              }}\r\n            />\r\n            <TodoInput outline />\r\n            <UndoneTodoList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react';\r\nimport withFilterTodos from \"./withFilterTodos\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nexport default withFilterTodos(TodoList);\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nconst ctx = React.createContext()\r\n\r\nexport const { Provider, Consumer } = ctx\r\n\r\nconst CollapseNav = ({ id, children, className, ...attrs }) => {\r\n  const [open, setOpen] = useState(false)\r\n  const [collapsing, setCollapsing] = useState(false)\r\n  const [collapseNav, setCollapseNav] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const collapseEl = document.querySelector(`#${id}`)\r\n    collapseEl.addEventListener('transitionend', () => setCollapsing(false))\r\n    setCollapseNav(collapseEl)\r\n  }, [])\r\n  useEffect(() => {\r\n    if (collapseNav) {\r\n      if (open) {\r\n        collapseNav.style.width = collapseNav.scrollWidth + 'px'\r\n      } else {\r\n        const activeItem = document.querySelector(\r\n          `#${id} .collapse-item.active`\r\n        )\r\n        if (activeItem) {\r\n          collapseNav.style.width = activeItem.scrollWidth + 'px'\r\n        }\r\n      }\r\n    }\r\n  }, [open])\r\n\r\n  const handleClick = () => {\r\n    setCollapsing(true)\r\n    setOpen(!open)\r\n  }\r\n\r\n  return (\r\n    <Provider value={handleClick}>\r\n      <div\r\n        id={id}\r\n        className={`collapse-nav pl-0 mb-0 ${collapsing ? 'collapsing' : ''} ${\r\n          open ? 'show' : ''\r\n        } ${className}`}\r\n        {...attrs}\r\n      >\r\n        {children}\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport const CollapseItem = ({ children, className, onClick, active, ...attrs }) => {\r\n  const handleClick = useContext(ctx)\r\n  return (\r\n    <div\r\n      className={`collapse-item ${active ? 'active' : ''} ${className}`}\r\n      onClick={handleClick}\r\n      {...attrs}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollapseNav\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setFilter } from 'features/todos/todoSlice'\r\nimport CollapseNav, { CollapseItem } from 'components/CollapseNav'\r\nimport TextBtn from 'components/TextBtn'\r\n\r\nfunction TodoFilterNav() {\r\n  const { filter, filterTypes } = useSelector(({ todo }) => ({\r\n    filter: todo.filter,\r\n    filterTypes: todo.filterTypes,\r\n  }))\r\n  const dispatch = useDispatch()\r\n  const onClick = (type) => dispatch(setFilter(type))\r\n  return (\r\n    <>\r\n      <CollapseNav id=\"todosFilterNav\">\r\n        {filterTypes.map((el, i) => {\r\n          const active = filter === el\r\n          return (\r\n            <CollapseItem key={i} active={active}>\r\n              <TextBtn\r\n                className={`p-0 ${active ? '' : 'disabled'}`}\r\n                onClick={() => onClick(el)}\r\n              >\r\n                {el}\r\n              </TextBtn>\r\n            </CollapseItem>\r\n          )\r\n        })}\r\n      </CollapseNav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoFilterNav\r\n","import React, { useState } from 'react'\r\nimport VendorDatePicker from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nfunction DatePicker({ className = '', ...attrs }) {\r\n  const [startDate, setStartDate] = useState(new Date())\r\n\r\n  return (\r\n    <VendorDatePicker\r\n      selected={startDate}\r\n      onChange={setStartDate}\r\n      className={`border-0 form-control ${className}`}\r\n      {...attrs}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DatePicker\r\n","import React from 'react'\r\nimport FilterTodoList from 'features/todos/FilterTodoList'\r\nimport TodoInput from 'features/todos/TodoInput'\r\nimport TodoFilterNav from 'features/todos/TodoFilterNav'\r\nimport DatePicker from 'components/DatePicker'\r\n\r\nexport default function Report() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-8\">\r\n        <div className=\"col-7\"></div>\r\n        <div className=\"col-5 col-lg-4\">\r\n          <TodoInput />\r\n          <div className=\"pb-3 d-flex align-items-center justify-content-between\">\r\n            <DatePicker />\r\n            <TodoFilterNav />\r\n          </div>\r\n          <FilterTodoList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction LightNavLink({ children, className, ...attrs }) {\r\n  return (\r\n    <NavLink exact className={`h4 link-light ${className}`} avtiveclassname=\"active\" {...attrs}>\r\n      {children}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default LightNavLink\r\n","import React from 'react'\r\nimport LightNavLink from './LightNavLink'\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <div className=\"sidebar sidebar-dark px-0 bg-pink justify-content-center\">\r\n      <LightNavLink to=\"/report\">\r\n        <i className=\"fas fa-stream\"></i>\r\n      </LightNavLink>\r\n      <LightNavLink to=\"/\" className=\"mt-4\">\r\n        <i className=\"far fa-clock\"></i>\r\n      </LightNavLink>\r\n      <LightNavLink to=\"/ring\" className=\"mt-4\">\r\n        <i className=\"fas fa-music\"></i>\r\n      </LightNavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n"],"sourceRoot":""}